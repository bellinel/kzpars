from datetime import datetime
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import asyncio
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service
import time
import requests
import os
import urllib3

from chek_nca import find_nca

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

async def auth(driver):
    try:
        select_lang = driver.find_element(By.XPATH, "/html/body/app-root/app-auth/div/div[2]/div[2]/app-lang/p-selectbutton/div/div[2]/span")
        select_lang.click()
        await asyncio.sleep(3)
            
        next_menu = WebDriverWait(driver, 15).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, "span.icon-arrow-next"))
        )
        next_menu.click()

        button = driver.find_element(By.XPATH, "//button[contains(text(), '–í—ã–±—Ä–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç')]")
        button.click()
        await find_nca()
    except:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è")
        



def save_pdf(url):
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    filename = f"file_{timestamp}.pdf"

    response = requests.get(url, verify=False)
    with open(filename, 'wb') as f:
        f.write(response.content)


def check_auth(driver):
    try:
        WebDriverWait(driver, 60).until(
            EC.presence_of_element_located((By.XPATH, "//p[contains(@class, 'username')]"))
        )
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
        return True
    except:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é")
        return False



async def download_kz(driver):    

    # driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
    driver.get("https://erap-public.kgp.kz/#/login")

    await auth(driver)
    chek_auth = check_auth(driver)

    # 2. –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –≠–¶–ü (–∏—Å–ø–æ–ª—å–∑—É–µ–º CSS-—Å–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è –∏–∫–æ–Ω–∫–∏)
    
    if chek_auth:
        processed_iins = set()
        while True:
            try:
                await asyncio.sleep(1)

        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫
                container = driver.find_elements(By.XPATH, "//table[@id='pn_id_18-table']//tbody/tr")

                for i, item in enumerate(container):
                    try:
                        cells = item.find_elements(By.TAG_NAME, "td")
                        if len(cells) >= 8:
                            iin = cells[2].text.strip()
                            status = cells[6].text.strip()

                            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ –∏–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ "–ù–µ –æ–ø–ª–∞—á–µ–Ω"
                            if iin in processed_iins or status != "–ù–µ –æ–ø–ª–∞—á–µ–Ω":
                                continue

                            processed_iins.add(iin)  # –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π

                            # –ö–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É
                            button = cells[7].find_element(By.TAG_NAME, "button")
                            driver.execute_script("arguments[0].click();", button)
                            print(f"üü¢ –û—Ç–∫—Ä—ã–ª –∑–∞–ø–∏—Å—å —Å –ò–ò–ù: {iin}")
                            await asyncio.sleep(1)

                            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º PDF
                            try:
                                protokol_li = WebDriverWait(driver, 10).until(
                                    EC.presence_of_element_located((By.XPATH, "//li[p[contains(text(), '–ü—Ä–æ—Ç–æ–∫–æ–ª')]]"))
                                )
                                # –ù–∞—Ö–æ–¥–∏–º —Å—Å—ã–ª–∫—É –≤–Ω—É—Ç—Ä–∏
                                pdf_link = protokol_li.find_element(By.TAG_NAME, "a")
                                href = pdf_link.get_attribute("href")
                                save_pdf(href)
                                print("üì• PDF —Å–æ—Ö—Ä–∞–Ω—ë–Ω")
                                driver.back()
                                await asyncio.sleep(1)
                                await auth(driver)
                                
# –ü–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥ ‚Äî –∂–¥—ë–º, –ø–æ–∫–∞ —Å–Ω–æ–≤–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è —Ç–∞–±–ª–∏—Ü–∞
                                WebDriverWait(driver, 15).until(
                                    EC.presence_of_element_located((By.XPATH, "//table[@id='pn_id_18-table']//tbody/tr"))
                                )
                                # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª ‚Äî –±–µ–∑ break
                                continue

                            except:
                                print("‚ö†Ô∏è PDF –Ω–µ –Ω–∞–π–¥–µ–Ω")

                            # –ù–∞–∑–∞–¥ –∫ —Ç–∞–±–ª–∏—Ü–µ
                            

                             # –ü–æ—Å–ª–µ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏ ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –∏ –æ–±–Ω–æ–≤–ª—è–µ–º container

                    except Exception as e:
                        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –∑–∞–ø–∏—Å–∏ {i}: {e}")

                # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                    try:
                        button_next = driver.find_element(By.XPATH, "//button[.//span[text()='–°–ª–µ–¥—É—é—â–∏–µ 10']]")
                        if button_next.is_enabled():
                            button_next.click()
                            print("‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")
                            await asyncio.sleep(3)
                        else:
                            print("‚úÖ –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞")
                            break
                    except:
                        print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–°–ª–µ–¥—É—é—â–∏–µ 10' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                        break

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
                break


        



                    
        
async def main():
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
    while True:
        await download_kz(driver)
        await asyncio.sleep(10)




            

            
    # 3. –í—ã–±–æ—Ä –ö–∞–∑—Ç–æ–∫–µ–Ω (NCALayer)
    
        


if __name__ == "__main__":
    asyncio.run(main())


